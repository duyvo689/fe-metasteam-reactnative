// source: category.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var page_pb = require('./page_pb.js');
goog.object.extend(proto, page_pb);
goog.exportSymbol('proto.pb.Category', null, global);
goog.exportSymbol('proto.pb.CategoryId', null, global);
goog.exportSymbol('proto.pb.CategoryList', null, global);
goog.exportSymbol('proto.pb.CategoryQuery', null, global);
goog.exportSymbol('proto.pb.Chain', null, global);
goog.exportSymbol('proto.pb.Genre', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Category = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.Category.repeatedFields_, null);
};
goog.inherits(proto.pb.Category, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.Category.displayName = 'proto.pb.Category';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.CategoryId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.CategoryId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.CategoryId.displayName = 'proto.pb.CategoryId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.CategoryList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.CategoryList.repeatedFields_, null);
};
goog.inherits(proto.pb.CategoryList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.CategoryList.displayName = 'proto.pb.CategoryList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.CategoryQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.CategoryQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.CategoryQuery.displayName = 'proto.pb.CategoryQuery';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.Category.repeatedFields_ = [16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Category.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Category.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Category} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Category.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    genre: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contract: jspb.Message.getFieldWithDefault(msg, 5, ""),
    chain: jspb.Message.getFieldWithDefault(msg, 6, 0),
    websiteurl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    avatarurl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    coverurl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    covervideourl: jspb.Message.getFieldWithDefault(msg, 10, ""),
    whitepaperurl: jspb.Message.getFieldWithDefault(msg, 11, ""),
    explorerurl: jspb.Message.getFieldWithDefault(msg, 12, ""),
    twitterurl: jspb.Message.getFieldWithDefault(msg, 13, ""),
    discordurl: jspb.Message.getFieldWithDefault(msg, 14, ""),
    facebookurl: jspb.Message.getFieldWithDefault(msg, 15, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
    priority: jspb.Message.getFieldWithDefault(msg, 17, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Category}
 */
proto.pb.Category.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Category;
  return proto.pb.Category.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Category} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Category}
 */
proto.pb.Category.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.pb.Genre} */ (reader.readEnum());
      msg.setGenre(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContract(value);
      break;
    case 6:
      var value = /** @type {!proto.pb.Chain} */ (reader.readEnum());
      msg.setChain(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsiteurl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarurl(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoverurl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCovervideourl(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setWhitepaperurl(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setExplorerurl(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTwitterurl(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscordurl(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setFacebookurl(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Category.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Category.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Category} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Category.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.pb.Genre} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!proto.pb.Chain} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pb.Category.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Genre genre = 2;
 * @return {!proto.pb.Genre}
 */
proto.pb.Category.prototype.getGenre = function() {
  return /** @type {!proto.pb.Genre} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.pb.Genre} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setGenre = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearGenre = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasGenre = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.pb.Category.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.pb.Category.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string contract = 5;
 * @return {string}
 */
proto.pb.Category.prototype.getContract = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setContract = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearContract = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasContract = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Chain chain = 6;
 * @return {!proto.pb.Chain}
 */
proto.pb.Category.prototype.getChain = function() {
  return /** @type {!proto.pb.Chain} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.pb.Chain} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setChain = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearChain = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasChain = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string websiteUrl = 7;
 * @return {string}
 */
proto.pb.Category.prototype.getWebsiteurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setWebsiteurl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearWebsiteurl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasWebsiteurl = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string avatarUrl = 8;
 * @return {string}
 */
proto.pb.Category.prototype.getAvatarurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setAvatarurl = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearAvatarurl = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasAvatarurl = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string coverUrl = 9;
 * @return {string}
 */
proto.pb.Category.prototype.getCoverurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setCoverurl = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearCoverurl = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasCoverurl = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string coverVideoUrl = 10;
 * @return {string}
 */
proto.pb.Category.prototype.getCovervideourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setCovervideourl = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearCovervideourl = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasCovervideourl = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string whitepaperUrl = 11;
 * @return {string}
 */
proto.pb.Category.prototype.getWhitepaperurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setWhitepaperurl = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearWhitepaperurl = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasWhitepaperurl = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string explorerUrl = 12;
 * @return {string}
 */
proto.pb.Category.prototype.getExplorerurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setExplorerurl = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearExplorerurl = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasExplorerurl = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string twitterUrl = 13;
 * @return {string}
 */
proto.pb.Category.prototype.getTwitterurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setTwitterurl = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearTwitterurl = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasTwitterurl = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string discordUrl = 14;
 * @return {string}
 */
proto.pb.Category.prototype.getDiscordurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setDiscordurl = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearDiscordurl = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasDiscordurl = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string facebookUrl = 15;
 * @return {string}
 */
proto.pb.Category.prototype.getFacebookurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setFacebookurl = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearFacebookurl = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasFacebookurl = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated string tags = 16;
 * @return {!Array<string>}
 */
proto.pb.Category.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional int32 priority = 17;
 * @return {number}
 */
proto.pb.Category.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.setPriority = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Category} returns this
 */
proto.pb.Category.prototype.clearPriority = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Category.prototype.hasPriority = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.CategoryId.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.CategoryId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.CategoryId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.CategoryId.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.CategoryId}
 */
proto.pb.CategoryId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.CategoryId;
  return proto.pb.CategoryId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.CategoryId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.CategoryId}
 */
proto.pb.CategoryId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.CategoryId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.CategoryId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.CategoryId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.CategoryId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.pb.CategoryId.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.CategoryId} returns this
 */
proto.pb.CategoryId.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.CategoryList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.CategoryList.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.CategoryList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.CategoryList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.CategoryList.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.pb.Category.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.CategoryList}
 */
proto.pb.CategoryList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.CategoryList;
  return proto.pb.CategoryList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.CategoryList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.CategoryList}
 */
proto.pb.CategoryList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Category;
      reader.readMessage(value,proto.pb.Category.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.CategoryList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.CategoryList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.CategoryList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.CategoryList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pb.Category.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Category values = 1;
 * @return {!Array<!proto.pb.Category>}
 */
proto.pb.CategoryList.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.pb.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.Category, 1));
};


/**
 * @param {!Array<!proto.pb.Category>} value
 * @return {!proto.pb.CategoryList} returns this
*/
proto.pb.CategoryList.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Category}
 */
proto.pb.CategoryList.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.Category, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.CategoryList} returns this
 */
proto.pb.CategoryList.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.CategoryQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.CategoryQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.CategoryQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.CategoryQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    genre: jspb.Message.getFieldWithDefault(msg, 1, 0),
    page: (f = msg.getPage()) && page_pb.Page.toObject(includeInstance, f),
    sorting: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.CategoryQuery}
 */
proto.pb.CategoryQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.CategoryQuery;
  return proto.pb.CategoryQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.CategoryQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.CategoryQuery}
 */
proto.pb.CategoryQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.pb.Genre} */ (reader.readEnum());
      msg.setGenre(value);
      break;
    case 2:
      var value = new page_pb.Page;
      reader.readMessage(value,page_pb.Page.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    case 3:
      var value = /** @type {!proto.pb.Sorting} */ (reader.readEnum());
      msg.setSorting(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.CategoryQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.CategoryQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.CategoryQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.CategoryQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.pb.Genre} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      page_pb.Page.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.pb.Sorting} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional Genre genre = 1;
 * @return {!proto.pb.Genre}
 */
proto.pb.CategoryQuery.prototype.getGenre = function() {
  return /** @type {!proto.pb.Genre} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.pb.Genre} value
 * @return {!proto.pb.CategoryQuery} returns this
 */
proto.pb.CategoryQuery.prototype.setGenre = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.CategoryQuery} returns this
 */
proto.pb.CategoryQuery.prototype.clearGenre = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.CategoryQuery.prototype.hasGenre = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Page page = 2;
 * @return {?proto.pb.Page}
 */
proto.pb.CategoryQuery.prototype.getPage = function() {
  return /** @type{?proto.pb.Page} */ (
    jspb.Message.getWrapperField(this, page_pb.Page, 2));
};


/**
 * @param {?proto.pb.Page|undefined} value
 * @return {!proto.pb.CategoryQuery} returns this
*/
proto.pb.CategoryQuery.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.CategoryQuery} returns this
 */
proto.pb.CategoryQuery.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.CategoryQuery.prototype.hasPage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Sorting sorting = 3;
 * @return {!proto.pb.Sorting}
 */
proto.pb.CategoryQuery.prototype.getSorting = function() {
  return /** @type {!proto.pb.Sorting} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.pb.Sorting} value
 * @return {!proto.pb.CategoryQuery} returns this
 */
proto.pb.CategoryQuery.prototype.setSorting = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.CategoryQuery} returns this
 */
proto.pb.CategoryQuery.prototype.clearSorting = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.CategoryQuery.prototype.hasSorting = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.pb.Genre = {
  GAME: 0,
  MUSIC: 1,
  ART: 2
};

/**
 * @enum {number}
 */
proto.pb.Chain = {
  BSC: 0
};

goog.object.extend(exports, proto.pb);
